        -:    0:Source:../src/LinSolve.hpp
        -:    0:Graph:tc.gcno
        -:    0:Data:tc.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Introduction to the header template.
        -:    3: * For each function FUNC, the file name shall be FUNC.hpp in src/DeemaAlomair folder.
        -:    4: * Every FUNC shall be replaced with implemented function name.
        -:    5: * The type of a CFS with FLOAT is CFST<FLOAT>
        -:    6: * The code shall follow c++17 standard.
        -:    7: * Only the c++ standard libraries are allowed.
        -:    8: * C-style code is highly not recommended.
        -:    9: */
        -:   10:
        -:   11:#ifndef FSL_FUNC_H
        -:   12:#define FSL_FUNC_H
        -:   13:
        -:   14:#include <vector>
        -:   15:#include <Eigen/Dense>
        -:   16:/*Other library inclusion is here*/
        -:   17:namespace FSL{
        -:   18:    template <class FLOAT>
        1:   19:    void LinSolve(size_t n, const std::vector<std::vector<FLOAT>>& M, const std::vector<FLOAT>& y, std::vector<FLOAT>& x)
        -:   20:    {
        2:   21:        Eigen::Matrix<FLOAT, Eigen::Dynamic, Eigen::Dynamic> ME(n, n);
        6:   22:        for(size_t i = 0; i < n; ++i)
        -:   23:        {
       30:   24:            for(size_t j = 0; j < n; ++j)
        -:   25:            {
       25:   26:                ME(i, j) = M[i][j];
        -:   27:            }
        -:   28:        }
        2:   29:        Eigen::Matrix<FLOAT, Eigen::Dynamic, 1> xE(n), yE(n);
        6:   30:        for(size_t i =0; i<n; ++i)
        -:   31:        {
        5:   32:            yE(i) = y[i];
        -:   33:        }
        1:   34:        xE = ME.colPivHouseholderQr().solve(yE);
        1:   35:        x.resize(n);
        6:   36:        for (size_t i=0; i< n; ++i)
        -:   37:        {
        5:   38:            x[i]=xE(i);
        -:   39:        }
        1:   40:    }
        -:   41:}
        -:   42:#endif
        -:   43:
        -:   44:/*
        -:   45: * Type N in MIS shall be translated to size_t in C++. 
        -:   46: * This type is already introduced in CFSData.h
        -:   47: */
